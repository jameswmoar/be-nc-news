{
  "/api": {
    "GET /api": {
      "description": "serves up a json representation of all the available endpoints of the api"
    }
  },
  "/api/topics": {
    "GET /api/topics": {
      "description": "serves an array of all topics",
      "queries": [],
      "exampleResponse": {
        "topics": [{ "slug": "football", "description": "Footie!" }]
      }
    }
  },
  "/api/articles": {
    "GET /api/articles": {
      "description": "serves an array of all articles",
      "queries": ["author", "topic", "sort_by", "order", "limit", "p"],
      "exampleResponse": {
        "articles": [
          {
            "title": "Article 1"
          },
          { "title": "Article 2" }
        ],
        "total_count": 20
      }
    }
  },
  "/api/articles/:article_id": {
    "GET /api/articles/:article_id": {
      "description": "serves an object of the specified article",
      "exampleResponse": {
        "article": {
          "article_id": 1,
          "title": "Running a Node App",
          "body": "This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.",
          "votes": 0,
          "topic": "coding",
          "author": "jessjelly",
          "created_at": "2016-08-18T12:07:52.389Z",
          "comment_count": 8
        }
      }
    },
    "PATCH /api/articles/:article_id": {
      "description": "serves an object containing the updated article",
      "queries": ["sort_by", "order", "limit", "p"],
      "exampleBody": {
        "inc_votes": 2
      },
      "exampleResponse": {
        "article_id": 1,
        "title": "Running a Node App",
        "body": "This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.",
        "votes": 2,
        "topic": "coding",
        "author": "jessjelly",
        "created_at": "2016-08-18T12:07:52.389Z",
        "comment_count": 8
      }
    }
  },
  "/api/articles/:article_id/comments": {
    "GET /api/articles/:article_id/comments": {
      "description": "serves an array containing all comments from a specified article",
      "exampleResponse": [
        {
          "comment_id": 44,
          "author": "grumpy19",
          "article_id": 1,
          "votes": 4,
          "created_at": "2017-11-20T08:58:48.322Z",
          "body": "Error est qui id corrupti et quod enim accusantium minus. Deleniti quae ea magni officiis et qui suscipit non."
        },
        {
          "comment_id": 52,
          "author": "jessjelly",
          "article_id": 1,
          "votes": 10,
          "created_at": "Consectetur deleniti sed. Omnis et dolore omnis aspernatur. Et porro accusantium. Tempora ullam voluptatum et rerum."
        }
      ]
    },
    "POST /api/articles/:article_id/comments": {
      "description": "posts a comment to the specified article",
      "exampleBody": {
        "body": "I have a controvertial opinion regarding the subject matter of this article",
        "username": "grumpy19"
      },
      "exampleResponse": {
        "comment_id": 555,
        "author": "grumpy19",
        "article_id": 1,
        "votes": 0,
        "created_at": "2019-06-28T09:58:48.322Z",
        "body": "I have a controvertial opinion regarding the subject matter of this article"
      }
    }
  },
  "/api/comments/:comment_id": {
    "PATCH /api/comments/:comment_id": {
      "description": "serves an object containing the updated comment",
      "exampleBody": {
        "inc_votes": 2
      },
      "exampleResponse": {
        "comment_id": 555,
        "author": "grumpy19",
        "article_id": 1,
        "votes": 2,
        "created_at": "2019-06-28T09:58:48.322Z",
        "body": "I have a controvertial opinion regarding the subject matter of this article"
      }
    },
    "DELETE /api/comments/:comment_id": {
      "description": "returns a status of 204 with no body"
    }
  },
  "/api/users/:username": {
    "GET /api/users/:username": {
      "description": "serves an object containing details of the requested user",
      "exampleResponse": {
        "username": "grumpy19",
        "avatar_url": "https://www.tumbit.com/profile-image/4/original/mr-grumpy.jpg",
        "name": "Paul Grump"
      }
    }
  }
}
